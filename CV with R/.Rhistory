drv = RSQLite::SQLite()
)
# DBI::dbDisconnect(conn)
conn = dbConnect(
dbname = file.path(home, 'Downloads', 'chinook.db'),
drv = RSQLite::SQLite()
)
# DBI::dbDisconnect(conn)
dbListTables(conn)
dbListFields(conn, "Artist")
dbListFields(conn, "Artists")
dbReadTable(conn, "Artists") %>% head(3)
ipk = function(pkg){
new.pkg = list.of.pkgs[!(list.of.pkgs %in% .packages(all.available = TRUE))]
if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)
suppressPackageStartupMessages({sapply(pkg, require, character.only = TRUE)})
}
list.of.pkgs = c("tidyverse", "magrittr", "rvest", "httr", "jsonlite", "DBI", "config", "vaultr", "dbplyr")
ipk(list.of.pkgs)
tinytex::tlmgr_update()
install.packages("distill")
home = ifelse(Sys.info()[["sysname"]] == "Linux", Sys.getenv("HOME"), Sys.getenv("USERPROFILE"))
home = gsub("\\\\", "/",home)
_dir = file.path(home, "Analysis)", "R",
home = ifelse(Sys.info()[["sysname"]] == "Linux", Sys.getenv("HOME"), Sys.getenv("USERPROFILE"))
home = gsub("\\\\", "/",home)
dir = file.path(home, "Analysis)", "R",
"r4ds")
dir
home = ifelse(Sys.info()[["sysname"]] == "Linux", Sys.getenv("HOME"), Sys.getenv("USERPROFILE"))
home = gsub("\\\\", "/",home)
dir = file.path(home, "Analysis", "R",
"r4ds")
dir
distill::create_blog(dir = dir, title = "More into data.table")
dir = file.path(home, "Analysis")
distill::create_blog(dir = dir, title = "More into data.table")
distill::create_blog(dir = dir, title = "More into data.table")
home = ifelse(Sys.info()[["sysname"]] == "Linux", Sys.getenv("HOME"), Sys.getenv("USERPROFILE"))
home = gsub("\\\\", "/",home)
dir = file.path(home, "Analysis", "Distill websites")
distill::create_blog(dir = dir, title = "More into data.table")
ipk = function(pkg){
new.pkg = list.of.pkgs[!(list.of.pkgs %in% .packages(all.available = TRUE))]
if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)
suppressPackageStartupMessages(sapply(pkg, library, character.only = TRUE))
}
list.of.pkgs = c('tidyverse', 'magrittr', 'nycflights13', 'lubridate')
ipk(list.of.pkgs)
home = ifelse(Sys.info()["sysname"] == 'Linux', Sys.getenv("HOME"), Sys.getenv("USERPROFILE")) %>%
gsub("\\\\", "/",.)
# 1. product of 2 numbers adding to 2020 ----------------------------------
data = file.path(home, "Downloads")
dat = read.delim(file.path(data,"dat1.txt")) %>% `colnames<-`(c("x1"))
dat =  dat %>%
mutate(., x2 = x1)
out = expand.grid(dat$x1, dat$x2) %>% `colnames<-`(c("x1", "x2"))
out1 = out %>%
mutate(., x3 = rowSums(.)) %>%
filter(., x3 == 2020) %>% slice(1) %>%
select(-x3) %>%
prod(.)
out1
install.packages("Pagedown")
install.packages("pagedown")
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Cq7X-TA6iR0ZVFOD5QkfGxvZOWg3Zz2XnwAMz4YMInE",
pdf_mode = params$pdf_mode
)
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Cq7X-TA6iR0ZVFOD5QkfGxvZOWg3Zz2XnwAMz4YMInE",
pdf_mode = params$pdf_mode
)
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Cq7X-TA6iR0ZVFOD5QkfGxvZOWg3Zz2XnwAMz4YMInE",
pdf_mode = params$pdf_mode
)
# CV <- readr::read_rds('cached_positions.rds')
# When in pdf export mode the little dots are unaligned, so fix that with some conditional CSS.
if(params$pdf_mode) {
cat("
<style>
:root{
--decorator-outer-offset-left: -6.5px;
}
</style>")
}
# Build interactive network of positions colored by section
# and connected if they occurred in the same year
datadrivencv::build_network_logo(CV$entries_data)
if(params$pdf_mode){
cat("View this CV online with links at https://github.com/Bokola/Analysis/blob/master/CV%20with%20R/cv_Basil Owiti Okola.html")
} else {
cat("[<i class='fas fa-download'></i> Download a PDF of this CV](https://github.com/Bokola/Analysis/blob/master/CV%20with%20R/cv_Basil Owiti Okola.pdf)")
}
CV %>% print_contact_info()
CV %>% print_skill_bars()
# Note the special double pipe so we modify the CV object in place
# CV %<>% print_text_block("intro")
CV %<>% print_section('education')
CV %<>% print_section('work_experience')
CV %<>% print_text_block('Internship')
CV %<>% print_section('Internship')
readr::read_rds('cached_positions.rds')
getwd()
home = ifelse(Sys.info()[["sysname"]] == "Linux", Sys.getenv("HOME"), Sys.getenv("USERPROFILE"))
home = gsub("\\\\", "/", home)
dir = file.path(home, "Analysis", "CV with R")
saveRDS(CV, file.path(dir, "ddcv_cache.rds"))
CV1 <- readr::read_rds(file.path(dir,'cached_positions.rds'))
saveRDS(CV, file.path(dir, "cached_positions.rds"))
CV1 <- readr::read_rds(file.path(dir,'cached_positions.rds'))
readr::read_rds(file.path(dir,'cached_positions.rds'))
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
# CV <- create_CV_object(
#   data_location = "https://docs.google.com/spreadsheets/d/1Cq7X-TA6iR0ZVFOD5QkfGxvZOWg3Zz2XnwAMz4YMInE",
#   pdf_mode = params$pdf_mode
# )
# saveRDS(CV, file.path(dir, "cached_positions.rds"))
CV <- readr::read_rds(file.path(dir,'cached_positions.rds'))
# When in pdf export mode the little dots are unaligned, so fix that with some conditional CSS.
if(params$pdf_mode) {
cat("
<style>
:root{
--decorator-outer-offset-left: -6.5px;
}
</style>")
}
# Build interactive network of positions colored by section
# and connected if they occurred in the same year
# datadrivencv::build_network_logo(CV$entries_data)
if(params$pdf_mode){
cat("View this CV online with links at https://github.com/Bokola/Analysis/blob/master/CV%20with%20R/cv_Basil Owiti Okola.html")
} else {
cat("[<i class='fas fa-download'></i> Download a PDF of this CV](https://github.com/Bokola/Analysis/blob/master/CV%20with%20R/cv_Basil Owiti Okola.pdf)")
}
CV %>% print_contact_info()
CV %>% print_skill_bars()
# Note the special double pipe so we modify the CV object in place
# CV %<>% print_text_block("intro")
CV %<>% print_section('education')
CV %<>% print_section('work_experience')
CV %<>% print_section('Internship')
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
# CV <- create_CV_object(
#   data_location = "https://docs.google.com/spreadsheets/d/1Cq7X-TA6iR0ZVFOD5QkfGxvZOWg3Zz2XnwAMz4YMInE",
#   pdf_mode = params$pdf_mode
# )
# saveRDS(CV, file.path(dir, "cached_positions.rds"))
CV <- readr::read_rds(file.path(dir,'cached_positions.rds'))
# When in pdf export mode the little dots are unaligned, so fix that with some conditional CSS.
if(params$pdf_mode) {
cat("
<style>
:root{
--decorator-outer-offset-left: -6.5px;
}
</style>")
}
# Build interactive network of positions colored by section
# and connected if they occurred in the same year
# datadrivencv::build_network_logo(CV$entries_data)
if(params$pdf_mode){
cat("View this CV online with links at https://github.com/Bokola/Analysis/blob/master/CV%20with%20R/cv_Basil Owiti Okola.html")
} else {
cat("[<i class='fas fa-download'></i> Download a PDF of this CV](https://github.com/Bokola/Analysis/blob/master/CV%20with%20R/cv_Basil Owiti Okola.pdf)")
}
CV %>% print_contact_info()
CV %>% print_skill_bars()
# Note the special double pipe so we modify the CV object in place
# CV %<>% print_text_block("intro")
CV %<>% print_section('education')
CV %<>% print_section('work_experience')
CV %<>% print_section('Internship')
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
glue::glue("View this CV online with links at https://github.com/Bokola/Analysis/blob/master/CV%20with%20R/cv_Basil Owiti Okola.html")
cat("hhhh\n kkkkk\n")
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
home = ifelse(Sys.info()[["sysname"]] == "Linux", Sys.getenv("HOME"), Sys.getenv("USERPROFILE"))
home = gsub("\\\\", "/",home)
home = ifelse(Sys.info()[["sysname"]] == "Linux", Sys.getenv("HOME"), Sys.getenv("USERPROFILE"))
home = gsub("\\\\", "/",home)
data_dir = file.path(home, "Google Drive (basil.okola@student.uhasselt.be)", "MSc. Stats Hasselt",
"y1 sem1", "plfd")
fig_dir = file.path(home, "Google Drive (basil.okola@student.uhasselt.be)", "MSc. Stats Hasselt",
"y1 sem1", "plfd")
knitr::opts_chunk$set(echo = TRUE,
# base_dir = "figures/",
fig.path = "figures/",
fig.align = "center",
fig.width = 6.5,
fig.height = 4,
dev = "png",
cache = FALSE)
options(tinytex.verbose = TRUE)
options(width = 100)
options(scipen = 999)
ipk = function(pkg){
new.pkg = list.of.pkgs[!(list.of.pkgs %in% .packages(all.available = TRUE))]
if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)
suppressPackageStartupMessages({sapply(pkg, require, character.only = TRUE )})
}
list.of.pkgs = c("tidyverse", "magrittr", "BiocStyle", "knitr", "rmarkdown", "bookdown",
"e1071", "lattice", "mvtnorm", "dslabs", "NHANES", "skimr", "cowplot", "plyr", "data.table", "amsmath", "multcomp", "haven")
ipk(list.of.pkgs)
temp = list.files(file.path(data_dir),pattern="*.XPT")
list2env(
lapply(setNames(temp, tolower(make.names(gsub("(.+?)(\\_.*)", "\\1", temp)))), function(x){
x =read_xpt(file.path(data_dir, x))
names(x) <- tolower(names(x))
return(x)}),
envir = .GlobalEnv)
data = subset(dxx)
names(dxx)
data = Reduce(function(x,y) merge(x,y,by="seqn",all=TRUE) ,list(dxx, demo,dbq,duq,smq,whq))
summary(data$dxdtobmd)
table(data$ridreth3)
table(data$ridreth1)
str(data$ridreth3)
str(dem$ridreth3)
str(demo$ridreth3)
attr(data$ridreth3)
attributes(data$ridreth3)
data1 = plyr::join_all(list(dxx, demo,dbq,duq,smq,whq), by='seqn', type='left')
attributes(data1$ridreth3)
data = Reduce(function(x,y) left_join(x,y,by="seqn",all=TRUE) ,list(dxx, demo,dbq,duq,smq,whq))
attributes(data$ridreth3)
data1 = dplyr::left_join(list(demo,dxx, dbq,duq,smq,whq), by='seqn', type='left')
?left_join
data1 = dplyr::left_join(list(demo,dxx, dbq,duq,smq,whq), by='seqn', type='left')
data = Reduce(function(x,y) left_join(x,y,by="seqn",all=TRUE) ,list(demo,dxx,dbq,duq,smq,whq))
table(data$ridreth3)
table(data$ridreth1)
attributes(data$ridreth3)
str(demo$ridreth3)
?factor_recode
?dplyr::recode_factor
data = data %>%
mutate(ridreth3 = factor(ridreth3, levels = c('mexican american', 'hispanic', 'white','black', 'asian','other' )))
table(data$ridreth3)
data = Reduce(function(x,y) left_join(x,y,by="seqn",all=TRUE) ,list(demo,dxx,dbq,duq,smq,whq))
?as.factor
as.factor(data$ridreth3, levels = c('mexican american', 'hispanic', 'white','black', 'asian','other' ))
factanal(1:10, 1:10)
factor(1:10, 1:10)
data = Reduce(function(x,y) left_join(x,y,by="seqn",all=TRUE) ,list(demo,dxx,dbq,duq,smq,whq))
as.factor(data$ridreth3, levels = c('mexican american', 'hispanic', 'white','black', 'asian','other' ))
factor(data$ridreth3, labels  = c('mexican american', 'hispanic', 'white','black', 'asian','other' ))
table(data$riagendr)
sapply(data, function(y) sum(length(which(is.na(y)|y == ""))))
purrr::map_df(sapply(data, function(y) sum(length(which(is.na(y)|y == "")))))
x = sapply(data, function(y) sum(length(which(is.na(y)|y == ""))))
setnames(x, names(data))
y = stack(x)
View(y)
table(data$riagendr) %>% colSums()
table(data$riagendr) %>% rowsum()
table(data$ridageyr)
data = Reduce(function(x,y) left_join(x,y,by="seqn",all=TRUE) ,list(demo,dxx,dbq,duq,smq,whq))
# x = sapply(data, function(y) sum(length(which(is.na(y)|y == ""))))
# y = stack(x)
data = data %>%
mutate(ridreth3 = factor(data$ridreth3, labels  = c('mexican american', 'hispanic', 'white','black', 'asian','other' )),
riagendr = factor(riagendr, labels = c('male', 'female')))
data_set = filter(data, ridageyr >= 20)
cols = c('ridreth1', 'riagendr')
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(col, col_y)) +
# geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cols = c('ridreth1', 'riagendr')
View(smq)
barplot(data_set$ridreth3)
table(data_set$ridreth3)
plot_box(data_set, cols)
cat_cols = c('ridreth', 'riagendr')
plot_box(data_set, cols)
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(cols, col_y)) +
# geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cat_cols = c('ridreth', 'riagendr')
plot_box(data_set, cols)
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(cols, col_y)) +
# geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', cols))
print(p)
}
}
cat_cols = c('ridreth', 'riagendr')
plot_box(data_set, cols)
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(cols, col_y)) +
# geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', cols))
print(p)
}
}
cat_cols = c('ridreth', 'riagendr')
plot_box(data_set, cat_cols)
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(cols, col_y)) +
# geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', cols))
print(p)
}
}
cat_cols = c('ridreth3', 'riagendr')
plot_box(data_set, cat_cols)
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(col, col_y)) +
# geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cat_cols = c('ridreth3', 'riagendr')
plot_box(data_set, cat_cols)
str(data_set$dxdtobmd)
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(col, !is.na(col_y))) +
# geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cat_cols = c('ridreth3', 'riagendr')
plot_box(data_set, cat_cols)
data_set = filter(data, ridageyr >= 20 & !is.na(dxdtobmd))
ggplot(data_set, aes(riagendr, dxdtobmd)) +
geom_boxplot()
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(col, col_y)) +
geom_boxplot() +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cat_cols = c('ridreth3', 'riagendr')
plot_box(data_set, cat_cols)
# ggplot(data_set, aes(riagendr, dxdtobmd)) +
#   geom_boxplot()
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(col, col_y)) +
geom_boxplot() +
geom_jitter(color = "blue") +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cat_cols = c('ridreth3', 'riagendr')
plot_box(data_set, cat_cols)
# ggplot(data_set, aes(riagendr, dxdtobmd)) +
#   geom_boxplot()
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(col, col_y)) +
geom_boxplot() +
geom_jitter(color = "blue", alpha = 0.1) +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cat_cols = c('ridreth3', 'riagendr')
plot_box(data_set, cat_cols)
# ggplot(data_set, aes(riagendr, dxdtobmd)) +
#   geom_boxplot()
plot_box <- function(df, cols, col_y = 'dxdtobmd'){
options(repr.plot.width = 4, repr.plot.height = 3.5)
for (col in cols){
p <- ggplot(df, aes_string(col, col_y)) +
geom_boxplot() +
geom_jitter(color = "black", alpha = 0.1) +
# theme_dviz_open() +
theme(axis.title=element_text(size=14), axis.text = element_text(size=14)) +
theme_minimal_hgrid(10, rel_small = 1)
theme(plot.margin = margin(3, 7, 3, 1.5))
ggtitle(paste('Box plot of', col_y, '\n vs.', col))
print(p)
}
}
cat_cols = c('ridreth3', 'riagendr')
plot_box(data_set, cat_cols)
# ggplot(data_set, aes(riagendr, dxdtobmd)) +
#   geom_boxplot()
?t.test
t.test(dxdtobmd, riagendr, data = data_set)
t.test(data_set$dxdtobmd, data_set$riagendr)
t.test(data_set$dxdtobmd, as.character(data_set$riagendr))
t.test(dxdtobmd, riagendr, data = data_set)
t.test(dxdtobmd~riagendr, data = data_set)
summary(t.test(dxdtobmd~riagendr, data = data_set))
x = summary(t.test(dxdtobmd~riagendr, data = data_set))
names(x)
summary(t.test(dxdtobmd~riagendr, data = data_set))$p.value
t.test(dxdtobmd~riagendr, data = data_set)[p.value]
t.test(dxdtobmd~riagendr, data = data_set)["p.value"]
t.test(dxdtobmd~riagendr, data = data_set)
m = lm(dxdtobmd~ridreth3, data = data_set)
anova(m)
summary(m)
m = lm(dxdtobmd~ridreth3, data = data_set)
# summary(m)
anova(m)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
source('C:/Users/basil/Analysis/CV with R/render_cv.r', echo=TRUE)
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "CV_Basil Owiti Okola.docx")
